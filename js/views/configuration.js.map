{"version":3,"sources":["configuration.es6"],"names":[],"mappings":"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","file":"configuration.js","sourcesContent":["define(['react', 'react-bootstrap', 'ramda', 'shuttle', 'shuttle-react', 'components/toggle-cell', 'static-data/countries'], (React, ReactBootstrap, R, Shuttle, ShuttleReact, ToggleCellView, countries) => {\n    class ConfigurationView extends React.Component {\n\n        countrySubArrays;\n\n        constructor(props) {\n            super(props);\n\n            this.countrySubArrays = R.splitEvery(10, R.map(country => Shuttle.ref({\n                selected: false,\n                country: country\n            }), countries));\n        }\n\n        render() {\n            const DOM = React.DOM;\n\n            const eventId = this.props.params.eventId;\n            const nameIsOk = false;\n\n            return DOM.div({}, [\n                React.createElement(ReactBootstrap.Pager, {}, [\n                    React.createElement(ReactBootstrap.PageItem, {href: `#event/${eventId}/configuration`}, \"Configuration\"),\n                    React.createElement(ReactBootstrap.PageItem, {next: true, href: `#event/${eventId}/registration`}, [\n                        \"Registration\", ' ', React.createElement(ReactBootstrap.Glyphicon, {glyph: 'menu-right'})\n                    ])\n                ]),\n\n                DOM.div({}, [\n                    DOM.form({className: 'form-horizontal'}, [\n                        React.createElement(ReactBootstrap.Input, {\n                            label: \"Name\",\n\n                            type: 'text',\n                            labelClassName: 'col-md-1',\n                            wrapperClassName: 'col-md-7',\n\n                            bsStyle: nameIsOk ? 'success' : 'error',\n                            hasFeedback: true,\n                            defaultValue: \"\",\n                            onChange: (e) => this.setState({name: e.target.value})\n                        }),\n                        DOM.div({className: 'form-group'}, [\n                            DOM.label({className: 'control-label col-md-1'}, DOM.span({}, \"Countries\")),\n                            DOM.div({className: 'col-md-7'}, DOM.table({}))\n                        ]),\n                        DOM.div({className: 'form-group'}, [\n                            DOM.label({className: 'control-label col-md-1'}, DOM.span({}, \"Countries\")),\n                            DOM.div({className: 'btn-array col-md-7'}, [\n                                R.map(countrySubArray => DOM.div({className: 'btn-array-row'}, [\n                                    R.map(country => DOM.span({className: 'btn-array-cell'}, React.createElement(ToggleCellView, {\n                                        value: country,\n                                        toggle: item => R.assoc('selected', !item.selected, item),\n                                        active: item => item.selected,\n                                        renderer: item => React.createElement(ReactBootstrap.OverlayTrigger, {\n                                            placement: 'top',\n                                            delayShow: 750,\n                                            overlay: React.createElement(ReactBootstrap.Tooltip, {}, item.country.countryName)\n                                        }, DOM.img({\n                                            key: 'image',\n                                            style: {height: '20px'},\n                                            src: `http://www.geonames.org/flags/x/${item.country.countryCode}.gif`\n                                        }))\n                                    })), countrySubArray)\n                                ]), this.countrySubArrays)\n                            ])\n                        ])\n                    ])\n                ])\n            ]);\n        }\n    }\n\n    window.c = countries;\n\n    return ConfigurationView;\n});\n"]}