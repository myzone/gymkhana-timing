{"version":3,"sources":["shuttle-snapshot.es6"],"names":[],"mappings":"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","file":"shuttle-snapshot.js","sourcesContent":["define(['ramda'], (R) => {\n    class Ref {\n\n        listeners;\n        dependencies;\n        value;\n\n        constructor(initialState, dependencies) {\n            this.listeners = new Set();\n            this.dependencies = dependencies;\n            this.value = initialState\n        }\n\n        get() {\n            return this.value;\n        }\n\n        set(newState) {\n            const oldState = this.value;\n            this.value = newState;\n\n\n            if (!R.equals(oldState, newState)) {\n                this.listeners.forEach(listener => listener(oldState, newState));\n            }\n        };\n\n        filter(filterer, defaultState) {\n            const innerResult = new Ref(filterer(this.value)\n                ? this.value\n                : defaultState, [this]);\n\n            this.addListener((oldState, newState) => {\n                if (filterer(newState)) {\n                    innerResult.set(newState);\n                }\n            });\n\n            return innerResult;\n        };\n\n        map(mapper) {\n            var innerResult = new Ref(mapper(this.value), [this]);\n\n            this.addListener((oldState, newState) => innerResult.set(mapper(newState)));\n\n            return innerResult;\n        };\n\n        flatMap(mapper) {\n            let currentMapped = mapper(this.value);\n\n            const innerResult = new Ref(currentMapped ? currentMapped.get() : null, [this]);\n\n            innerResult.addListener((oldState, newState) => {\n                if (currentMapped) {\n                    currentMapped.set(newState);\n                }\n            });\n\n            const listener = function (oldState, newState) {\n                innerResult.set(newState);\n            };\n            if (currentMapped) {\n                currentMapped.addListener(listener);\n            }\n\n            this.addListener((oldState, newState) => {\n                const oldMapped = oldState ? mapper(oldState) : null;\n                const newMapped = newState ? mapper(newState) : null;\n\n                if (oldMapped)\n                    oldMapped.removeListener(listener);\n\n                if (newMapped)\n                    newMapped.addListener(listener);\n\n                currentMapped = newMapped;\n                listener(oldMapped ? oldMapped.get() : null, newMapped ? newMapped.get() : null);\n            });\n\n            return innerResult;\n        }\n\n        addListener(listener) {\n            this.listeners.add(listener);\n        }\n        removeListener(listener) {\n            this.listeners.delete(listener);\n        }\n\n        log(mapper) {\n            mapper = mapper || R.identity;\n\n            this.addListener((oldState, newState) => {\n                console.log({\n                    oldState: mapper(oldState),\n                    newState: mapper(newState)\n                });\n            });\n\n            return this;\n        };\n\n    }\n\n    var ref = (initialState) => {\n        return new Ref(initialState, []);\n    };\n    var combine = (observables, combiner) => {\n        const args = () => R.map(observable => observable.get(), observables);\n        const dependencies = observables => {\n            const flatDependencyTree = observables => R.concat(observables, R.map(flatDependencyTree, R.map(observable => observable.dependencies, observables)));\n\n            return R.intersection(observables, R.uniq(flatDependencyTree(observables)))\n        };\n\n        const realDependencies = dependencies(observables);\n        const innerResult = new Ref(R.apply(combiner, args()), realDependencies);\n\n        R.forEach(observable => observable.addListener(() => innerResult.set(R.apply(combiner, args()))), realDependencies);\n\n        return innerResult;\n    };\n    var json = observable => {\n        if (R.isNil(observable))\n            return observable;\n\n        if (observable instanceof Ref)\n            return json(observable.get());\n\n        if (observable instanceof Array)\n            return R.map(json, observable);\n\n        if (typeof observable == 'object' && observable.constructor == Object)\n            return R.mapObj(json, observable);\n\n        return observable;\n    };\n\n    return {\n        Ref: Ref,\n\n        ref: ref,\n        combine: combine,\n        json: json\n    };\n});"]}